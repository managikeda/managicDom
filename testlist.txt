＜Todo＞
・StatusBarの機能テスト


＜追加したい機能＞
・Labelのfontプロパティ関連
    ・フォントの名称だけの指定で（予め選ばれた範囲から）google fontを適用できるようにする

・LoadingSceneクラスの追加
    ・引数として次のシーンに必要となるassetを指定することができる
    ・次のシーンのために追加assetをプリロードする
    ・ローディングバーを表示する
    ・ロードを終えたら次のシーンに遷移する

・QuestionUIクラスの追加
    ・配下に、FrameWindow, LabelArea, UIButton等を配置する
    ・QuestionControllerからの指示により問題文と選択肢を表示する
    ・選択肢(UIButton)を押すとQuestionControllerに結果を通知する
    　(通知後、次の問題が表示されるまで、押しても無反応)
    ・採点結果をQuestionControllerから受け取って表示する
    　(採点結果は、選択肢脇に〇×アイコンで表示する)

・QuestionControllerクラスの追加
    ・QuestionUI, BattleControllerと連携して以下の業務を遂行する
    　・出題範囲となる問題ユニットデータの取得
    　・出題順のシャッフルや再出題の優先度制御
    　・問題文と選択肢の表示
    　・問題の採点
    　・単問あたり採点結果の表示
    　・ユニット終了後の採点結果表示
    ※それぞれの業務は関連関数の上書きにより柔軟に編集可能

・BattleControllerクラスの追加
    ・ユニット開始（バトル関連）、バトル進行、ユニット終了（バトル関連）を制御する
    　・プレイヤーおよび敵キャラクターのステータスを取得、設定
    　・CharaSprite, StatusBar, AnimatedCover等の生成と配置
    
    ・QuestionControllerと連携して以下の業務を遂行する
    　・ユニット開始前の準備
    　・ユニット終了後の結果表示

    ※それぞれの業務は関連関数の上書きにより柔軟に編集可能

・AnimatedCoverクラスの追加
    ・長方形の覆いを表示する（Scene全体を覆ったり、特定の範囲を覆ったりする）
    ・被ダメージ、与ダメージ表現や、暗転などのアニメーションを表示する
    ・引数として、アニメーションの種類を指定することができる
    
・Particleクラスの追加
    ・任意の座標にパーティクルを表示する
    ・パーティクルのアニメーションを制御する
    ・スプライトシートから作成する方法と、CSSで描く方法を提供する
    ・サンプルとして、クリックした座標にパーティクルを表示するものを提示
    
    

＜既知の問題＞

＜要テスト＞

＜対応済み＞





＜プロンプトメモ＞


(1)衝突判定がlayer0だけになってしまうところは改善されていません。
(2)mapLayer意外のentity同士の衝突判定も論理値ベースに修正してください。

（１）map.intersectEntity(player)がlayer:0のレイヤーにしか対応していないようです。
(map.intersectEntity(player, { layers: [1] })の判定も正しく動作していません。)
確認して、collidableなレイヤーから選んで判定できるように修正してください。
（デフォルトでは全てのcollidableなレイヤーを判定対象とする）

（２）また、例えば下記のようにコーディングした場合、

if(core.input.left){
    player.x -= player.speed;
    if(map.intersectEntity(player)){
        player.x += player.speed;
    }
}

playerが左へ進んで衝突した場合、player.xが元の値に戻り、衝突する以前の状態に戻るはずだが、
実際には衝突状態が続いてしまう。原因分析して対策を講じてください。

